# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rids: -r win-x64
          - os: windows-latest
            rids: -r win-arm64
          - os: macos-latest
            rids: -r osx-arm64
          - os: linux-latest
            rids: -r linux-x64
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Install Dependencies
      run: |
            if [ "$RUNNER_OS" == "Linux" ]; then
                  sudo apt install p7zip-full curl
                  sudo dpkg --add-architecture i386 
                  sudo mkdir -pm755 /etc/apt/keyrings
                  sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
                  sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
                  sudo apt update && sudo apt install --install-recommends winehq-stable
                  echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | sudo debconf-set-selections
                  sudo apt install -y ttf-mscorefonts-installer
                  sudo fc-cache
                  fc-match Arial
                  wine64 --version
                  wget -qO- https://monogame.net/downloads/net9_mgfxc_wine_setup.sh | bash
            elif [ "$RUNNER_OS" == "macOS" ]; then
                  dotnet workload install macos
                  brew install wget p7zip curl freetype freeimage && brew install --cask wine-stable
                  wget https://dot.net/v1/dotnet-install.sh
                  chmod +x dotnet-install.sh
                  ./dotnet-install.sh --runtime dotnet --architecture amd64 --os macos --install-dir ./dotnet64
                  sudo mkdir -p /usr/local/lib
                  sudo ln -s /opt/homebrew/bin/wine /usr/local/bin/wine64
                  sudo ln -s /opt/homebrew/lib/libfreetype.6.dylib /usr/local/lib/libfreetype.dylib
                  sudo ln -s /opt/homebrew/lib/libfreeimage.3.dylib /usr/local/lib/libfreeimage.dylib
                  ls -n /Applications/ | grep Xcode*
                  sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
                  wget -qO- https://monogame.net/downloads/net9_mgfxc_wine_setup.sh | bash
            fi
      shell: bash
    - name: Install butler
      run: |
            if [ "$RUNNER_OS" == "Linux" ]; then
                  curl -L https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default -o butler.zip
                  7z x butler.zip
                  ./butler version
            elif [ "$RUNNER_OS" == "Windows" ]; then
                  curl -L https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default -o butler.zip
                  7z x butler.zip
                  ./butler version
            elif [ "$RUNNER_OS" == "macOS" ]; then
                  curl -L https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default -o butler.zip
                  7z x butler.zip
                  ./butler version
            fi
      shell: bash
    - name: Install MonoPack
      run: |
            dotnet tool install MonoPack
      shell: bash
    - name: Restore dependencies
      run: dotnet restore
    - name: Delete ./publish-${{ matrix.os }}
      run: rm -Rf ./publish-${{ matrix.os }}
      shell: bash
    - name: Build
      run: dotnet monopack -p VectorRumble.Desktop/VectorRumble.Desktop.csproj -o ./publish-${{ matrix.os }} ${{ matrix.rids }} -i ./Info.plist -c ./VectorRumble.icns -v
      #run: dotnet publish VectorRumble.Desktop/VectorRumble.Desktop.csproj -c Release -r ${{ matrix.rid }} -p:PublishReadyToRun=false -p:TieredCompilation=false -p:PublishSingleFile=true --self-contained -o ./publish-${{ matrix.os }} --no-restore
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: publish-${{ matrix.os }}
        path: ./publish-${{ matrix.os }}

  publish:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: publish-${{ matrix.os }}
      - name: Install butler
        run: |
              curl -L https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default -o butler.zip
              7z x butler.zip
              ./butler version
        shell: bash
      # - name: Publish
      #   run: |
      #         ./butler push ./publish-${{ matrix.os }} ${{ secrets.ITCHIO_USER }}/${{ secrets.ITCHIO_GAME }}:windows-alpha --userversion-file VectorRumble.Desktop/appversion.txt -v
      #   shell: bash
      
